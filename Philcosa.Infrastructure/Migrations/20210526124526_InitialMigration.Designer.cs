// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Philcosa.Infrastructure.Contexts;

namespace Philcosa.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210526124526_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("Roles", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "Identity");
                });

            modelBuilder.Entity("Philcosa.Application.Models.Audit.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NewValues")
                        .HasColumnType("text");

                    b.Property<string>("OldValues")
                        .HasColumnType("text");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("text");

                    b.Property<string>("TableName")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("Philcosa.Application.Models.Chat.ChatHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FromUserId")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("ToUserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromUserId");

                    b.HasIndex("ToUserId");

                    b.ToTable("ChatHistory");
                });

            modelBuilder.Entity("Philcosa.Application.Models.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("ProfilePictureDataUrl")
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("Users", "Identity");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Catalog.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Tax")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Catalog.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<int>("BrandId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageDataURL")
                        .HasColumnType("text");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "VEN",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 791, DateTimeKind.Local).AddTicks(2227),
                            Name = "Venda"
                        },
                        new
                        {
                            Id = 2,
                            Code = "TRA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 795, DateTimeKind.Local).AddTicks(1619),
                            Name = "Transkei"
                        },
                        new
                        {
                            Id = 3,
                            Code = "CIS",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 795, DateTimeKind.Local).AddTicks(1636),
                            Name = "Ciskei"
                        },
                        new
                        {
                            Id = 4,
                            Code = "BOP",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 795, DateTimeKind.Local).AddTicks(1639),
                            Name = "Bophuthatswana"
                        },
                        new
                        {
                            Id = 5,
                            Code = "SWA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 795, DateTimeKind.Local).AddTicks(1641),
                            Name = "South West Africa"
                        },
                        new
                        {
                            Id = 6,
                            Code = "RSA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 795, DateTimeKind.Local).AddTicks(1642),
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = 7,
                            Code = "NAM",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 795, DateTimeKind.Local).AddTicks(1644),
                            Name = "Namibia"
                        });
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Cover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alberta")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("AmountIssued")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<string>("Atlas")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CoverDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CoverTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("IdOnDate")
                        .HasColumnType("text");

                    b.Property<int?>("IssuedById")
                        .HasColumnType("integer");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Number")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<int?>("ValueId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CoverTypeId");

                    b.HasIndex("IssuedById");

                    b.HasIndex("ValueId");

                    b.ToTable("Covers");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverTheme", b =>
                {
                    b.Property<int>("CoverId")
                        .HasColumnType("integer");

                    b.Property<int>("ThemeId")
                        .HasColumnType("integer");

                    b.HasKey("CoverId", "ThemeId");

                    b.HasIndex("ThemeId");

                    b.ToTable("CoverThemes");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("CoverTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "FDC",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 796, DateTimeKind.Local).AddTicks(7509),
                            Name = "First Day"
                        },
                        new
                        {
                            Id = 2,
                            Code = "CMC",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 796, DateTimeKind.Local).AddTicks(7837),
                            Name = "Comemorative"
                        },
                        new
                        {
                            Id = 3,
                            Code = "FLT",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 796, DateTimeKind.Local).AddTicks(7841),
                            Name = "Flight"
                        },
                        new
                        {
                            Id = 4,
                            Code = "SLK",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 796, DateTimeKind.Local).AddTicks(7843),
                            Name = "Silk"
                        },
                        new
                        {
                            Id = 5,
                            Code = "GLD",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 796, DateTimeKind.Local).AddTicks(7845),
                            Name = "Gold Foiled"
                        },
                        new
                        {
                            Id = 6,
                            Code = "MIL",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 796, DateTimeKind.Local).AddTicks(7846),
                            Name = "Military"
                        },
                        new
                        {
                            Id = 7,
                            Code = "FIL",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 796, DateTimeKind.Local).AddTicks(7849),
                            Name = "Filatelic"
                        },
                        new
                        {
                            Id = 8,
                            Code = "BAL",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 796, DateTimeKind.Local).AddTicks(7851),
                            Name = "Balloon"
                        },
                        new
                        {
                            Id = 9,
                            Code = "RWY",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 796, DateTimeKind.Local).AddTicks(7853),
                            Name = "Railway"
                        });
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("MaxValue")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("MinValue")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.ToTable("CoverValues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "$",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 797, DateTimeKind.Local).AddTicks(5113),
                            MaxValue = 5m,
                            MinValue = 0m
                        },
                        new
                        {
                            Id = 2,
                            Code = "$$",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 797, DateTimeKind.Local).AddTicks(6386),
                            MaxValue = 15m,
                            MinValue = 5.01m
                        },
                        new
                        {
                            Id = 3,
                            Code = "$$$",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 797, DateTimeKind.Local).AddTicks(6428),
                            MaxValue = 50m,
                            MinValue = 15.01m
                        },
                        new
                        {
                            Id = 4,
                            Code = "$$$$",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 797, DateTimeKind.Local).AddTicks(6430),
                            MaxValue = 150m,
                            MinValue = 50.01m
                        },
                        new
                        {
                            Id = 5,
                            Code = "$$$$$",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 797, DateTimeKind.Local).AddTicks(6432),
                            MaxValue = 500m,
                            MinValue = 150.01m
                        },
                        new
                        {
                            Id = 6,
                            Code = "$$$$$$",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 797, DateTimeKind.Local).AddTicks(6435),
                            MinValue = 500.01m
                        });
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("URL")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.IssuedByEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("IssuedByEntities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SILK",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 846, DateTimeKind.Local).AddTicks(7622),
                            Name = "First Day Fabrics (Silk)"
                        },
                        new
                        {
                            Id = 2,
                            Code = "AEROBIC",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 846, DateTimeKind.Local).AddTicks(9832),
                            Name = "South African Air Force (Aerobic)"
                        },
                        new
                        {
                            Id = 3,
                            Code = "SAAR",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 846, DateTimeKind.Local).AddTicks(9856),
                            Name = "SA Army"
                        },
                        new
                        {
                            Id = 4,
                            Code = "DF",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 846, DateTimeKind.Local).AddTicks(9871),
                            Name = "Namib Air/Air Namibia (Delivery flights)"
                        },
                        new
                        {
                            Id = 5,
                            Code = "UN",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 846, DateTimeKind.Local).AddTicks(9885),
                            Name = "United Nations"
                        },
                        new
                        {
                            Id = 6,
                            Code = "WWF",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 846, DateTimeKind.Local).AddTicks(9906),
                            Name = "World Wildlife Fund"
                        },
                        new
                        {
                            Id = 7,
                            Code = "NA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 846, DateTimeKind.Local).AddTicks(9920),
                            Name = "Namib Air/Air Namibia"
                        },
                        new
                        {
                            Id = 8,
                            Code = "GOLD",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 846, DateTimeKind.Local).AddTicks(9935),
                            Name = "First Day Fabrics (Gold)"
                        },
                        new
                        {
                            Id = 9,
                            Code = "KA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 846, DateTimeKind.Local).AddTicks(9949),
                            Name = "Kempton Park Philatelic Society (Kemp Air)"
                        },
                        new
                        {
                            Id = 10,
                            Code = "TRS",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 846, DateTimeKind.Local).AddTicks(9964),
                            Name = "The Railway Society"
                        },
                        new
                        {
                            Id = 11,
                            Code = "SAP",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 846, DateTimeKind.Local).AddTicks(9977),
                            Name = "SA Police"
                        },
                        new
                        {
                            Id = 12,
                            Code = "SNM",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 846, DateTimeKind.Local).AddTicks(9991),
                            Name = "Simonstown Navy Museum"
                        },
                        new
                        {
                            Id = 13,
                            Code = "NP",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(101),
                            Name = "Nam Post"
                        },
                        new
                        {
                            Id = 14,
                            Code = "SADF",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(115),
                            Name = "SA Defence Force"
                        },
                        new
                        {
                            Id = 15,
                            Code = "SAPO",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(129),
                            Name = "SA Post Office"
                        },
                        new
                        {
                            Id = 16,
                            Code = "SSS",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(142),
                            Name = "Ship Society of SA"
                        },
                        new
                        {
                            Id = 17,
                            Code = "SAA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(156),
                            Name = "South African Airways"
                        },
                        new
                        {
                            Id = 18,
                            Code = "SAPF",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(172),
                            Name = "SA Philatelic Foundation"
                        },
                        new
                        {
                            Id = 19,
                            Code = "FED",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(185),
                            Name = "Federation"
                        },
                        new
                        {
                            Id = 20,
                            Code = "SAAM",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(199),
                            Name = "South African Airways Museum"
                        },
                        new
                        {
                            Id = 21,
                            Code = "P",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(212),
                            Name = "Private"
                        },
                        new
                        {
                            Id = 22,
                            Code = "SATS",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(226),
                            Name = "SA Transport Services"
                        },
                        new
                        {
                            Id = 23,
                            Code = "SHS",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(240),
                            Name = "Simonstown Historical Society"
                        },
                        new
                        {
                            Id = 24,
                            Code = "WP",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(253),
                            Name = "Warner Pharmaceuticals"
                        },
                        new
                        {
                            Id = 25,
                            Code = "SAFM",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(268),
                            Name = "SA Air Force Museum (Original Series)"
                        },
                        new
                        {
                            Id = 26,
                            Code = "KPPS_M",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(283),
                            Name = "Kempton Park Philatelic Society (Kemp Maksikard)"
                        },
                        new
                        {
                            Id = 27,
                            Code = "SARS",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(297),
                            Name = "SA Railway Services"
                        },
                        new
                        {
                            Id = 28,
                            Code = "KPPS_K",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(311),
                            Name = "Kempton Park Philatelic Society (Kemp Kover)"
                        },
                        new
                        {
                            Id = 29,
                            Code = "SAAFM_WWS",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(327),
                            Name = "SA Air Force Museum (World War Series)"
                        },
                        new
                        {
                            Id = 30,
                            Code = "SAAFM_S",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(370),
                            Name = "SA Air Force Museum (Spesials)"
                        },
                        new
                        {
                            Id = 31,
                            Code = "FA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(383),
                            Name = "Foreign Airline"
                        },
                        new
                        {
                            Id = 32,
                            Code = "SAN",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(396),
                            Name = "SA Navy"
                        },
                        new
                        {
                            Id = 33,
                            Code = "CA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(410),
                            Name = "Caprivi Airways"
                        },
                        new
                        {
                            Id = 34,
                            Code = "SAAFM_AF",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(426),
                            Name = "SA Air Force Museum (Anniversary Flights)"
                        },
                        new
                        {
                            Id = 35,
                            Code = "F",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(439),
                            Name = "Flitestar"
                        },
                        new
                        {
                            Id = 36,
                            Code = "A",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 847, DateTimeKind.Local).AddTicks(586),
                            Name = "Airphilsa"
                        });
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.ToTable("Themes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1139),
                            Name = "ITU"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1553),
                            Name = "Famous Persons"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1556),
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1558),
                            Name = "Police"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1559),
                            Name = "UPU"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1564),
                            Name = "Mandela"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1566),
                            Name = "Fishing/Angling"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1567),
                            Name = "Landscapes/Nature"
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1569),
                            Name = "Heraldry/Coat of Arms"
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1571),
                            Name = "Water and Sanitation"
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1573),
                            Name = "Agriculture/Farming"
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1574),
                            Name = "Golf"
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1576),
                            Name = "Cartoon"
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1577),
                            Name = "Lizards"
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1579),
                            Name = "Law"
                        },
                        new
                        {
                            Id = 16,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1581),
                            Name = "Swimming"
                        },
                        new
                        {
                            Id = 17,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1582),
                            Name = "Stamp on Stamps"
                        },
                        new
                        {
                            Id = 18,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1585),
                            Name = "Frogs"
                        },
                        new
                        {
                            Id = 19,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1586),
                            Name = "Costumes"
                        },
                        new
                        {
                            Id = 20,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1588),
                            Name = "Child Paintings"
                        },
                        new
                        {
                            Id = 21,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1589),
                            Name = "Turtles"
                        },
                        new
                        {
                            Id = 22,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1591),
                            Name = "WWF"
                        },
                        new
                        {
                            Id = 23,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1593),
                            Name = "Religion/Churches"
                        },
                        new
                        {
                            Id = 24,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1594),
                            Name = "Lions International"
                        },
                        new
                        {
                            Id = 25,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1596),
                            Name = "Boer War"
                        },
                        new
                        {
                            Id = 26,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1597),
                            Name = "Red Cross"
                        },
                        new
                        {
                            Id = 27,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1599),
                            Name = "Trees"
                        },
                        new
                        {
                            Id = 28,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1600),
                            Name = "Easter"
                        },
                        new
                        {
                            Id = 29,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1602),
                            Name = "Dogs"
                        },
                        new
                        {
                            Id = 30,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1603),
                            Name = "Transport"
                        },
                        new
                        {
                            Id = 31,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1605),
                            Name = "Gem Stones/Jewels"
                        },
                        new
                        {
                            Id = 32,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1606),
                            Name = "Railway/Trains"
                        },
                        new
                        {
                            Id = 33,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1608),
                            Name = "History"
                        },
                        new
                        {
                            Id = 34,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1611),
                            Name = "Shells"
                        },
                        new
                        {
                            Id = 35,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1612),
                            Name = "Geology"
                        },
                        new
                        {
                            Id = 36,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1614),
                            Name = "Cats"
                        },
                        new
                        {
                            Id = 37,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1615),
                            Name = "Grasses"
                        },
                        new
                        {
                            Id = 38,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1617),
                            Name = "Whales"
                        },
                        new
                        {
                            Id = 39,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1618),
                            Name = "Apartheid"
                        },
                        new
                        {
                            Id = 40,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1620),
                            Name = "Government and Politics"
                        },
                        new
                        {
                            Id = 41,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1621),
                            Name = "Football/Soccer"
                        },
                        new
                        {
                            Id = 42,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1623),
                            Name = "Tennis"
                        },
                        new
                        {
                            Id = 43,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1624),
                            Name = "Hockey"
                        },
                        new
                        {
                            Id = 44,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1626),
                            Name = "Chicken"
                        },
                        new
                        {
                            Id = 45,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1628),
                            Name = "Nursing"
                        },
                        new
                        {
                            Id = 46,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1629),
                            Name = "Flags"
                        },
                        new
                        {
                            Id = 47,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1631),
                            Name = "Equestrian"
                        },
                        new
                        {
                            Id = 48,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1632),
                            Name = "Disabled"
                        },
                        new
                        {
                            Id = 49,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1634),
                            Name = "Owls"
                        },
                        new
                        {
                            Id = 50,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1635),
                            Name = "Definitive Series"
                        },
                        new
                        {
                            Id = 51,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1637),
                            Name = "Girl Guides"
                        },
                        new
                        {
                            Id = 52,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1638),
                            Name = "Maps"
                        },
                        new
                        {
                            Id = 53,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1640),
                            Name = "Christmas"
                        },
                        new
                        {
                            Id = 54,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1642),
                            Name = "Science and Technology"
                        },
                        new
                        {
                            Id = 55,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1643),
                            Name = "Hares/Rabbits"
                        },
                        new
                        {
                            Id = 56,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1645),
                            Name = "Horses"
                        },
                        new
                        {
                            Id = 57,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1686),
                            Name = "Wines and Beer"
                        },
                        new
                        {
                            Id = 58,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1688),
                            Name = "Helicopters"
                        },
                        new
                        {
                            Id = 59,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1690),
                            Name = "Submarines"
                        },
                        new
                        {
                            Id = 60,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1691),
                            Name = "Monkeys and Baboons"
                        },
                        new
                        {
                            Id = 61,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1693),
                            Name = "Stamp Exhibition"
                        },
                        new
                        {
                            Id = 62,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1695),
                            Name = "Fruits"
                        },
                        new
                        {
                            Id = 63,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1696),
                            Name = "Road Safety"
                        },
                        new
                        {
                            Id = 64,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1698),
                            Name = "Mountains"
                        },
                        new
                        {
                            Id = 65,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1699),
                            Name = "Forestry/Trees"
                        },
                        new
                        {
                            Id = 66,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1702),
                            Name = "Atletics"
                        },
                        new
                        {
                            Id = 67,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1703),
                            Name = "Voortrekkers"
                        },
                        new
                        {
                            Id = 68,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1705),
                            Name = "Insects"
                        },
                        new
                        {
                            Id = 69,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1706),
                            Name = "Roses"
                        },
                        new
                        {
                            Id = 70,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1708),
                            Name = "Tourism"
                        },
                        new
                        {
                            Id = 71,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1709),
                            Name = "Postal History"
                        },
                        new
                        {
                            Id = 72,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1711),
                            Name = "Musical Instruments"
                        },
                        new
                        {
                            Id = 73,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1712),
                            Name = "Music"
                        },
                        new
                        {
                            Id = 74,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1714),
                            Name = "Motorsport"
                        },
                        new
                        {
                            Id = 75,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1715),
                            Name = "Antarctica"
                        },
                        new
                        {
                            Id = 76,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1717),
                            Name = "Cricket"
                        },
                        new
                        {
                            Id = 77,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1718),
                            Name = "Health/Medicine"
                        },
                        new
                        {
                            Id = 78,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1720),
                            Name = "Platinum"
                        },
                        new
                        {
                            Id = 79,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1721),
                            Name = "Literature/Writers"
                        },
                        new
                        {
                            Id = 80,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1723),
                            Name = "Unicef"
                        },
                        new
                        {
                            Id = 81,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1724),
                            Name = "Rivers"
                        },
                        new
                        {
                            Id = 82,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1726),
                            Name = "Royals"
                        },
                        new
                        {
                            Id = 83,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1727),
                            Name = "National Festivals"
                        },
                        new
                        {
                            Id = 84,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1729),
                            Name = "United Nations"
                        },
                        new
                        {
                            Id = 85,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1730),
                            Name = "Manufacturing/Industries"
                        },
                        new
                        {
                            Id = 86,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1732),
                            Name = "Space"
                        },
                        new
                        {
                            Id = 87,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1733),
                            Name = "Fossils"
                        },
                        new
                        {
                            Id = 88,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1735),
                            Name = "Birds"
                        },
                        new
                        {
                            Id = 89,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1736),
                            Name = "Meteorology/Weather"
                        },
                        new
                        {
                            Id = 90,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1738),
                            Name = "Olympic Games"
                        },
                        new
                        {
                            Id = 91,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1739),
                            Name = "Astronomy"
                        },
                        new
                        {
                            Id = 92,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1741),
                            Name = "Weapons"
                        },
                        new
                        {
                            Id = 93,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1742),
                            Name = "Millenium"
                        },
                        new
                        {
                            Id = 94,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1744),
                            Name = "Spiders"
                        },
                        new
                        {
                            Id = 95,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1745),
                            Name = "Settlers"
                        },
                        new
                        {
                            Id = 96,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1747),
                            Name = "Boxing"
                        },
                        new
                        {
                            Id = 97,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1749),
                            Name = "Windmills"
                        },
                        new
                        {
                            Id = 98,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1750),
                            Name = "Mining/Minerals"
                        },
                        new
                        {
                            Id = 99,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1752),
                            Name = "Forts and Castles"
                        },
                        new
                        {
                            Id = 100,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1753),
                            Name = "Diplomacy"
                        },
                        new
                        {
                            Id = 101,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1755),
                            Name = "Mushrooms/Fungi"
                        },
                        new
                        {
                            Id = 102,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1756),
                            Name = "Dams"
                        },
                        new
                        {
                            Id = 103,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1758),
                            Name = "Languages"
                        },
                        new
                        {
                            Id = 104,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1759),
                            Name = "Sharks"
                        },
                        new
                        {
                            Id = 105,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1761),
                            Name = "Arts/Culture/Traditions"
                        },
                        new
                        {
                            Id = 106,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1762),
                            Name = "Archaeology"
                        },
                        new
                        {
                            Id = 107,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1764),
                            Name = "Telecommunication"
                        },
                        new
                        {
                            Id = 108,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1765),
                            Name = "Rugby"
                        },
                        new
                        {
                            Id = 109,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1767),
                            Name = "Fish and Marine Life"
                        },
                        new
                        {
                            Id = 110,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1768),
                            Name = "van Riebeeck"
                        },
                        new
                        {
                            Id = 111,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1770),
                            Name = "Orchids"
                        },
                        new
                        {
                            Id = 112,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1771),
                            Name = "Jan van Riebeeck"
                        },
                        new
                        {
                            Id = 113,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1773),
                            Name = "Flight and Aircraft"
                        },
                        new
                        {
                            Id = 114,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1774),
                            Name = "Telephone"
                        },
                        new
                        {
                            Id = 115,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1776),
                            Name = "Folklore"
                        },
                        new
                        {
                            Id = 116,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1777),
                            Name = "Cars"
                        },
                        new
                        {
                            Id = 117,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1779),
                            Name = "Gold"
                        },
                        new
                        {
                            Id = 118,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1780),
                            Name = "Afrikaans language"
                        },
                        new
                        {
                            Id = 119,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1782),
                            Name = "Communication"
                        },
                        new
                        {
                            Id = 120,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1783),
                            Name = "Boy Scouts"
                        },
                        new
                        {
                            Id = 121,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1785),
                            Name = "Bats"
                        },
                        new
                        {
                            Id = 122,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1786),
                            Name = "Solar System"
                        },
                        new
                        {
                            Id = 123,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1788),
                            Name = "Architecture"
                        },
                        new
                        {
                            Id = 124,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1789),
                            Name = "Scuptures"
                        },
                        new
                        {
                            Id = 125,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1791),
                            Name = "Dinosaurs"
                        },
                        new
                        {
                            Id = 126,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1792),
                            Name = "Presidents and Leaders"
                        },
                        new
                        {
                            Id = 127,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1794),
                            Name = "Bridges"
                        },
                        new
                        {
                            Id = 128,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1795),
                            Name = "Museums"
                        },
                        new
                        {
                            Id = 129,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1797),
                            Name = "Hunting"
                        },
                        new
                        {
                            Id = 130,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1849),
                            Name = "Flora/Flowers"
                        },
                        new
                        {
                            Id = 131,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1851),
                            Name = "Constitution"
                        },
                        new
                        {
                            Id = 132,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1852),
                            Name = "Balloon Flights"
                        },
                        new
                        {
                            Id = 133,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1854),
                            Name = "Snails"
                        },
                        new
                        {
                            Id = 134,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1856),
                            Name = "Towns/Cities History"
                        },
                        new
                        {
                            Id = 135,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1857),
                            Name = "Butterflies"
                        },
                        new
                        {
                            Id = 136,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1859),
                            Name = "Monuments"
                        },
                        new
                        {
                            Id = 137,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1860),
                            Name = "Wildlife"
                        },
                        new
                        {
                            Id = 138,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1862),
                            Name = "Community Services"
                        },
                        new
                        {
                            Id = 139,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1863),
                            Name = "Uniforms"
                        },
                        new
                        {
                            Id = 140,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1865),
                            Name = "Ships/Maritime"
                        },
                        new
                        {
                            Id = 141,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1866),
                            Name = "Reptiles"
                        },
                        new
                        {
                            Id = 142,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1868),
                            Name = "Triangle Stamps"
                        },
                        new
                        {
                            Id = 143,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1869),
                            Name = "Energy"
                        },
                        new
                        {
                            Id = 144,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1871),
                            Name = "Child"
                        },
                        new
                        {
                            Id = 145,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1872),
                            Name = "Snakes"
                        },
                        new
                        {
                            Id = 146,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1874),
                            Name = "Stamp Day"
                        },
                        new
                        {
                            Id = 147,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1875),
                            Name = "Watersports"
                        },
                        new
                        {
                            Id = 148,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1877),
                            Name = "Waterfalls"
                        },
                        new
                        {
                            Id = 149,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1878),
                            Name = "Military"
                        },
                        new
                        {
                            Id = 150,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1880),
                            Name = "Rotary International"
                        },
                        new
                        {
                            Id = 151,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1881),
                            Name = "Paintings"
                        },
                        new
                        {
                            Id = 152,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 5, 26, 14, 45, 25, 803, DateTimeKind.Local).AddTicks(1883),
                            Name = "Education"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Philcosa.Application.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Philcosa.Application.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Philcosa.Application.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Philcosa.Application.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Philcosa.Application.Models.Chat.ChatHistory", b =>
                {
                    b.HasOne("Philcosa.Application.Models.Identity.ApplicationUser", "FromUser")
                        .WithMany("ChatHistoryFromUsers")
                        .HasForeignKey("FromUserId");

                    b.HasOne("Philcosa.Application.Models.Identity.ApplicationUser", "ToUser")
                        .WithMany("ChatHistoryToUsers")
                        .HasForeignKey("ToUserId");

                    b.Navigation("FromUser");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Catalog.Product", b =>
                {
                    b.HasOne("Philcosa.Domain.Entities.Catalog.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Cover", b =>
                {
                    b.HasOne("Philcosa.Domain.Entities.Country", "Country")
                        .WithMany("Covers")
                        .HasForeignKey("CountryId");

                    b.HasOne("Philcosa.Domain.Entities.CoverType", "CoverType")
                        .WithMany("Covers")
                        .HasForeignKey("CoverTypeId");

                    b.HasOne("Philcosa.Domain.Entities.IssuedByEntity", "IssuedBy")
                        .WithMany("Covers")
                        .HasForeignKey("IssuedById");

                    b.HasOne("Philcosa.Domain.Entities.CoverValue", "Value")
                        .WithMany("Covers")
                        .HasForeignKey("ValueId");

                    b.Navigation("Country");

                    b.Navigation("CoverType");

                    b.Navigation("IssuedBy");

                    b.Navigation("Value");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverTheme", b =>
                {
                    b.HasOne("Philcosa.Domain.Entities.Cover", "Cover")
                        .WithMany("CoverThemes")
                        .HasForeignKey("CoverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Philcosa.Domain.Entities.Theme", "Theme")
                        .WithMany("CoverTheme")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cover");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("Philcosa.Application.Models.Identity.ApplicationUser", b =>
                {
                    b.Navigation("ChatHistoryFromUsers");

                    b.Navigation("ChatHistoryToUsers");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Country", b =>
                {
                    b.Navigation("Covers");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Cover", b =>
                {
                    b.Navigation("CoverThemes");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverType", b =>
                {
                    b.Navigation("Covers");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverValue", b =>
                {
                    b.Navigation("Covers");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.IssuedByEntity", b =>
                {
                    b.Navigation("Covers");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Theme", b =>
                {
                    b.Navigation("CoverTheme");
                });
#pragma warning restore 612, 618
        }
    }
}
