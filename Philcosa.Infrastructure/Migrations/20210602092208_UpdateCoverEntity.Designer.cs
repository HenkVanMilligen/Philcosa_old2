// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Philcosa.Infrastructure.Contexts;

namespace Philcosa.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210602092208_UpdateCoverEntity")]
    partial class UpdateCoverEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("Roles", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "Identity");
                });

            modelBuilder.Entity("Philcosa.Application.Models.Audit.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NewValues")
                        .HasColumnType("text");

                    b.Property<string>("OldValues")
                        .HasColumnType("text");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("text");

                    b.Property<string>("TableName")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("Philcosa.Application.Models.Chat.ChatHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FromUserId")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("ToUserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromUserId");

                    b.HasIndex("ToUserId");

                    b.ToTable("ChatHistory");
                });

            modelBuilder.Entity("Philcosa.Application.Models.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("ProfilePictureDataUrl")
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("Users", "Identity");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Catalog.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Tax")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Catalog.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<int>("BrandId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageDataURL")
                        .HasColumnType("text");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "VEN",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 196, DateTimeKind.Local).AddTicks(7135),
                            Name = "Venda"
                        },
                        new
                        {
                            Id = 2,
                            Code = "TRA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 199, DateTimeKind.Local).AddTicks(6273),
                            Name = "Transkei"
                        },
                        new
                        {
                            Id = 3,
                            Code = "CIS",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 199, DateTimeKind.Local).AddTicks(6289),
                            Name = "Ciskei"
                        },
                        new
                        {
                            Id = 4,
                            Code = "BOP",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 199, DateTimeKind.Local).AddTicks(6292),
                            Name = "Bophuthatswana"
                        },
                        new
                        {
                            Id = 5,
                            Code = "SWA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 199, DateTimeKind.Local).AddTicks(6293),
                            Name = "South West Africa"
                        },
                        new
                        {
                            Id = 6,
                            Code = "RSA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 199, DateTimeKind.Local).AddTicks(6295),
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = 7,
                            Code = "NAM",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 199, DateTimeKind.Local).AddTicks(6297),
                            Name = "Namibia"
                        });
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Cover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alberta")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("AmountIssued")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<string>("Atlas")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CoverDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CoverIssuerId")
                        .HasColumnType("integer");

                    b.Property<int?>("CoverTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("IdOnDate")
                        .HasColumnType("text");

                    b.Property<string>("ImageDataUrl")
                        .HasColumnType("text");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Number")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int?>("ValueId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CoverIssuerId");

                    b.HasIndex("CoverTypeId");

                    b.HasIndex("ValueId");

                    b.ToTable("Covers");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverIssuer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("CoverIssuers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "APH",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(6163),
                            Name = "Airphilsa"
                        },
                        new
                        {
                            Id = 2,
                            Code = "CAP",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8435),
                            Name = "Caprivi Airways"
                        },
                        new
                        {
                            Id = 3,
                            Code = "FED",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8521),
                            Name = "Philatelic Federation"
                        },
                        new
                        {
                            Id = 4,
                            Code = "GLD",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8534),
                            Name = "First Day Fabrics (GOLD)"
                        },
                        new
                        {
                            Id = 5,
                            Code = "SLK",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8547),
                            Name = "First Day Fabrics (SILK)"
                        },
                        new
                        {
                            Id = 6,
                            Code = "FST",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8565),
                            Name = "Flitestar"
                        },
                        new
                        {
                            Id = 7,
                            Code = "FAL",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8577),
                            Name = "Foreign Airline"
                        },
                        new
                        {
                            Id = 8,
                            Code = "KPA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8591),
                            Name = "Kempton Park Philatelic Society (Kemp Air)"
                        },
                        new
                        {
                            Id = 9,
                            Code = "KPC",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8605),
                            Name = "Kempton Park Philatelic Society (Kemp kard)"
                        },
                        new
                        {
                            Id = 10,
                            Code = "KPK",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8620),
                            Name = "Kempton Park Philatelic Society (Kemp Kover"
                        },
                        new
                        {
                            Id = 11,
                            Code = "KPM",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8634),
                            Name = "Kempton Park Philatelic Society (Kemp Maksikard)"
                        },
                        new
                        {
                            Id = 12,
                            Code = "NAM",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8645),
                            Name = "Nam Post"
                        },
                        new
                        {
                            Id = 13,
                            Code = "NAA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8658),
                            Name = "Namib Air/Air Namibia"
                        },
                        new
                        {
                            Id = 14,
                            Code = "NAD",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8671),
                            Name = "Namib Air/Air Namibia (Delivery flights)"
                        },
                        new
                        {
                            Id = 15,
                            Code = "PRV",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8682),
                            Name = "Private"
                        },
                        new
                        {
                            Id = 16,
                            Code = "PRC",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8695),
                            Name = "Private (Ciskei Handcancelled)"
                        },
                        new
                        {
                            Id = 17,
                            Code = "SMA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8709),
                            Name = "SA Air Force Museum (Anniversary Flights)"
                        },
                        new
                        {
                            Id = 18,
                            Code = "SMO",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8739),
                            Name = "SA Air Force Museum (Original Series)"
                        },
                        new
                        {
                            Id = 19,
                            Code = "SMS",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8753),
                            Name = "SA Air Force Museum (Spesials)"
                        },
                        new
                        {
                            Id = 20,
                            Code = "SMW",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8766),
                            Name = "SA Air Force Museum (World War Series)"
                        },
                        new
                        {
                            Id = 21,
                            Code = "ARM",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8777),
                            Name = "SA Army"
                        },
                        new
                        {
                            Id = 22,
                            Code = "DEF",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8789),
                            Name = "SA Defence Force"
                        },
                        new
                        {
                            Id = 23,
                            Code = "NAV",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8800),
                            Name = "SA Navy"
                        },
                        new
                        {
                            Id = 24,
                            Code = "FOU",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8812),
                            Name = "SA Philatelic Foundation"
                        },
                        new
                        {
                            Id = 25,
                            Code = "SAP",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8824),
                            Name = "SA Police"
                        },
                        new
                        {
                            Id = 26,
                            Code = "SPO",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8835),
                            Name = "SA Post Office"
                        },
                        new
                        {
                            Id = 27,
                            Code = "SAR",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8847),
                            Name = "SA Railway Services"
                        },
                        new
                        {
                            Id = 28,
                            Code = "SAT",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8859),
                            Name = "SA Transport Services"
                        },
                        new
                        {
                            Id = 29,
                            Code = "SHP",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8871),
                            Name = "Ship Society of SA"
                        },
                        new
                        {
                            Id = 30,
                            Code = "SHS",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8883),
                            Name = "Simonstown Historical Society"
                        },
                        new
                        {
                            Id = 31,
                            Code = "SNM",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8895),
                            Name = "Simonstown Navy Museum"
                        },
                        new
                        {
                            Id = 32,
                            Code = "AER",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8908),
                            Name = "South African Air Force (Aerobic)"
                        },
                        new
                        {
                            Id = 33,
                            Code = "SAA",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8920),
                            Name = "South African Airways"
                        },
                        new
                        {
                            Id = 34,
                            Code = "SAM",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8934),
                            Name = "South African Airways Museum"
                        },
                        new
                        {
                            Id = 35,
                            Code = "TRS",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(8995),
                            Name = "The Railway Society"
                        },
                        new
                        {
                            Id = 36,
                            Code = "UNN",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(9007),
                            Name = "United Nations"
                        },
                        new
                        {
                            Id = 37,
                            Code = "WPH",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(9019),
                            Name = "Warner Pharmaceuticals"
                        },
                        new
                        {
                            Id = 38,
                            Code = "WWF",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 255, DateTimeKind.Local).AddTicks(9164),
                            Name = "World Wildlife Fund"
                        });
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverTheme", b =>
                {
                    b.Property<int>("CoverId")
                        .HasColumnType("integer");

                    b.Property<int>("ThemeId")
                        .HasColumnType("integer");

                    b.HasKey("CoverId", "ThemeId");

                    b.HasIndex("ThemeId");

                    b.ToTable("CoverThemes");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("CoverTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "FDC",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(992),
                            Name = "First Day"
                        },
                        new
                        {
                            Id = 2,
                            Code = "CMC",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(1278),
                            Name = "Comemorative"
                        },
                        new
                        {
                            Id = 3,
                            Code = "FLT",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(1282),
                            Name = "Flight"
                        },
                        new
                        {
                            Id = 4,
                            Code = "MIL",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(1284),
                            Name = "Military"
                        },
                        new
                        {
                            Id = 5,
                            Code = "FIL",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(1286),
                            Name = "Filatelic"
                        },
                        new
                        {
                            Id = 8,
                            Code = "BAL",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(1287),
                            Name = "Balloon"
                        },
                        new
                        {
                            Id = 9,
                            Code = "RWY",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(1289),
                            Name = "Railway"
                        });
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("MaxValue")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("MinValue")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.ToTable("CoverValues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "$",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(8304),
                            MaxValue = 5m,
                            MinValue = 0m
                        },
                        new
                        {
                            Id = 2,
                            Code = "$$",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(9430),
                            MaxValue = 15m,
                            MinValue = 5.01m
                        },
                        new
                        {
                            Id = 3,
                            Code = "$$$",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(9480),
                            MaxValue = 50m,
                            MinValue = 15.01m
                        },
                        new
                        {
                            Id = 4,
                            Code = "$$$$",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(9483),
                            MaxValue = 150m,
                            MinValue = 50.01m
                        },
                        new
                        {
                            Id = 5,
                            Code = "$$$$$",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(9485),
                            MaxValue = 500m,
                            MinValue = 150.01m
                        },
                        new
                        {
                            Id = 6,
                            Code = "$$$$$$",
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 201, DateTimeKind.Local).AddTicks(9487),
                            MinValue = 500.01m
                        });
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("URL")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Themes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(5593),
                            Name = "Afrikaans language"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(6963),
                            Name = "Agriculture/Farming"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(6972),
                            Name = "Antarctica"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(6974),
                            Name = "Apartheid"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(6976),
                            Name = "Architecture"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(6982),
                            Name = "Arts/Culture/Traditions"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(6985),
                            Name = "Astronomy/Space"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(6987),
                            Name = "Atletics"
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(6993),
                            Name = "Balloon Flights"
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(6997),
                            Name = "Birds/Bats"
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7000),
                            Name = "Boer War"
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7003),
                            Name = "Boxing"
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7005),
                            Name = "Boy Scouts/Girl Guides"
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7008),
                            Name = "Bridges/Dams"
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7011),
                            Name = "Butterflies"
                        },
                        new
                        {
                            Id = 16,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7014),
                            Name = "Cars"
                        },
                        new
                        {
                            Id = 17,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7017),
                            Name = "Cats/Dogs"
                        },
                        new
                        {
                            Id = 18,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7021),
                            Name = "Child"
                        },
                        new
                        {
                            Id = 19,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7024),
                            Name = "Child Paintings"
                        },
                        new
                        {
                            Id = 20,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7028),
                            Name = "Christmas"
                        },
                        new
                        {
                            Id = 21,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7064),
                            Name = "Communication"
                        },
                        new
                        {
                            Id = 22,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7069),
                            Name = "Community Services"
                        },
                        new
                        {
                            Id = 23,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7072),
                            Name = "Constitution"
                        },
                        new
                        {
                            Id = 24,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7076),
                            Name = "Cricket"
                        },
                        new
                        {
                            Id = 25,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7079),
                            Name = "Definitive Series"
                        },
                        new
                        {
                            Id = 26,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7083),
                            Name = "Dinosaurs/Fossils/Archaeology"
                        },
                        new
                        {
                            Id = 27,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7087),
                            Name = "Diplomacy"
                        },
                        new
                        {
                            Id = 28,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7091),
                            Name = "Disabled"
                        },
                        new
                        {
                            Id = 29,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7095),
                            Name = "Easter"
                        },
                        new
                        {
                            Id = 30,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7099),
                            Name = "Education"
                        },
                        new
                        {
                            Id = 31,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7104),
                            Name = "Energy"
                        },
                        new
                        {
                            Id = 32,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7108),
                            Name = "Famous Persons"
                        },
                        new
                        {
                            Id = 33,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7112),
                            Name = "Fish and Marine Life"
                        },
                        new
                        {
                            Id = 34,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7117),
                            Name = "Fishing/Angling"
                        },
                        new
                        {
                            Id = 35,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7122),
                            Name = "Flags"
                        },
                        new
                        {
                            Id = 36,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7126),
                            Name = "Flight and Aircraft"
                        },
                        new
                        {
                            Id = 37,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7131),
                            Name = "Flora/Flowers"
                        },
                        new
                        {
                            Id = 38,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7136),
                            Name = "Food and Drink"
                        },
                        new
                        {
                            Id = 39,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7141),
                            Name = "Football/Soccer"
                        },
                        new
                        {
                            Id = 40,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7146),
                            Name = "Forestry/Trees"
                        },
                        new
                        {
                            Id = 41,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7150),
                            Name = "Forts and Castles"
                        },
                        new
                        {
                            Id = 42,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7156),
                            Name = "Frogs"
                        },
                        new
                        {
                            Id = 43,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7161),
                            Name = "Fruit/Vegetables"
                        },
                        new
                        {
                            Id = 44,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7166),
                            Name = "Gem Stones/Jewels"
                        },
                        new
                        {
                            Id = 45,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7171),
                            Name = "Geology"
                        },
                        new
                        {
                            Id = 46,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7176),
                            Name = "Golf"
                        },
                        new
                        {
                            Id = 47,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7182),
                            Name = "Government and Politics"
                        },
                        new
                        {
                            Id = 48,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7187),
                            Name = "Grasses"
                        },
                        new
                        {
                            Id = 49,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7193),
                            Name = "Hares/Rabbits"
                        },
                        new
                        {
                            Id = 50,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7199),
                            Name = "Health/Medicine"
                        },
                        new
                        {
                            Id = 51,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7204),
                            Name = "Heraldry/Coat of Arms"
                        },
                        new
                        {
                            Id = 52,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7210),
                            Name = "Hockey"
                        },
                        new
                        {
                            Id = 53,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7216),
                            Name = "Horses/Equestrian"
                        },
                        new
                        {
                            Id = 54,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7222),
                            Name = "Insects/Bees"
                        },
                        new
                        {
                            Id = 55,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7231),
                            Name = "ITU"
                        },
                        new
                        {
                            Id = 56,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7239),
                            Name = "Landscapes/Nature"
                        },
                        new
                        {
                            Id = 57,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7247),
                            Name = "Law"
                        },
                        new
                        {
                            Id = 58,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7256),
                            Name = "Lions International"
                        },
                        new
                        {
                            Id = 59,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7264),
                            Name = "Literature/Writers"
                        },
                        new
                        {
                            Id = 60,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7273),
                            Name = "Mandela"
                        },
                        new
                        {
                            Id = 61,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7281),
                            Name = "Manufacturing/Industries"
                        },
                        new
                        {
                            Id = 62,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7290),
                            Name = "Maps"
                        },
                        new
                        {
                            Id = 63,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7299),
                            Name = "Meteorology/Weather"
                        },
                        new
                        {
                            Id = 64,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7308),
                            Name = "Military"
                        },
                        new
                        {
                            Id = 65,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7317),
                            Name = "Millenium"
                        },
                        new
                        {
                            Id = 66,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7649),
                            Name = "Mining/Minerals"
                        },
                        new
                        {
                            Id = 67,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7684),
                            Name = "Monkeys and Baboons"
                        },
                        new
                        {
                            Id = 68,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7692),
                            Name = "Monuments"
                        },
                        new
                        {
                            Id = 69,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7700),
                            Name = "Museums"
                        },
                        new
                        {
                            Id = 70,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7708),
                            Name = "Mushrooms/Fungi"
                        },
                        new
                        {
                            Id = 71,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7715),
                            Name = "Music"
                        },
                        new
                        {
                            Id = 72,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7723),
                            Name = "National Festivals"
                        },
                        new
                        {
                            Id = 73,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7731),
                            Name = "Nursing"
                        },
                        new
                        {
                            Id = 74,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7738),
                            Name = "Olympic Games"
                        },
                        new
                        {
                            Id = 75,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7746),
                            Name = "Orchids"
                        },
                        new
                        {
                            Id = 76,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7758),
                            Name = "Paintings"
                        },
                        new
                        {
                            Id = 77,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7770),
                            Name = "Platinum"
                        },
                        new
                        {
                            Id = 78,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7781),
                            Name = "Police"
                        },
                        new
                        {
                            Id = 79,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7793),
                            Name = "Postal History"
                        },
                        new
                        {
                            Id = 80,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7804),
                            Name = "Presidents and Leaders"
                        },
                        new
                        {
                            Id = 81,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7815),
                            Name = "Railway/Trains"
                        },
                        new
                        {
                            Id = 82,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7828),
                            Name = "Red Cross"
                        },
                        new
                        {
                            Id = 83,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7839),
                            Name = "Religion/Churches"
                        },
                        new
                        {
                            Id = 84,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7852),
                            Name = "Rivers"
                        },
                        new
                        {
                            Id = 85,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7862),
                            Name = "Road Safety"
                        },
                        new
                        {
                            Id = 86,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7871),
                            Name = "Roses"
                        },
                        new
                        {
                            Id = 87,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7879),
                            Name = "Rotary International"
                        },
                        new
                        {
                            Id = 88,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7888),
                            Name = "Royals"
                        },
                        new
                        {
                            Id = 89,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7897),
                            Name = "Rugby"
                        },
                        new
                        {
                            Id = 90,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7906),
                            Name = "Science and Technology"
                        },
                        new
                        {
                            Id = 91,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7915),
                            Name = "Settlers"
                        },
                        new
                        {
                            Id = 92,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7925),
                            Name = "Shells"
                        },
                        new
                        {
                            Id = 93,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7935),
                            Name = "Ships/Maritime"
                        },
                        new
                        {
                            Id = 94,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7944),
                            Name = "Snakes/Lizards/Reptiles"
                        },
                        new
                        {
                            Id = 95,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7954),
                            Name = "Spiders"
                        },
                        new
                        {
                            Id = 96,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7963),
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 97,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7974),
                            Name = "Stamp Day"
                        },
                        new
                        {
                            Id = 98,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7983),
                            Name = "Stamp Exhibition"
                        },
                        new
                        {
                            Id = 99,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(7993),
                            Name = "Stamp on Stamps"
                        },
                        new
                        {
                            Id = 100,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8004),
                            Name = "Swimming"
                        },
                        new
                        {
                            Id = 101,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8014),
                            Name = "Tennis"
                        },
                        new
                        {
                            Id = 102,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8024),
                            Name = "Tourism"
                        },
                        new
                        {
                            Id = 103,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8034),
                            Name = "Towns/Cities History"
                        },
                        new
                        {
                            Id = 104,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8045),
                            Name = "Transport"
                        },
                        new
                        {
                            Id = 105,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8056),
                            Name = "Triangle Stamps"
                        },
                        new
                        {
                            Id = 106,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8067),
                            Name = "Unicef"
                        },
                        new
                        {
                            Id = 107,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8087),
                            Name = "Uniforms/Costumes"
                        },
                        new
                        {
                            Id = 108,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8136),
                            Name = "United Nations"
                        },
                        new
                        {
                            Id = 109,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8147),
                            Name = "UPU"
                        },
                        new
                        {
                            Id = 110,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8158),
                            Name = "van Riebeeck"
                        },
                        new
                        {
                            Id = 111,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8169),
                            Name = "Voortrekkers"
                        },
                        new
                        {
                            Id = 112,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8179),
                            Name = "Water and Sanitation"
                        },
                        new
                        {
                            Id = 113,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8190),
                            Name = "Waterfalls"
                        },
                        new
                        {
                            Id = 114,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8201),
                            Name = "Whales/Dolphins/Sharks"
                        },
                        new
                        {
                            Id = 115,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8212),
                            Name = "Wildlife"
                        },
                        new
                        {
                            Id = 116,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8224),
                            Name = "Writing"
                        },
                        new
                        {
                            Id = 117,
                            CreatedBy = "DataSeed",
                            CreatedOn = new DateTime(2021, 6, 2, 11, 22, 8, 211, DateTimeKind.Local).AddTicks(8235),
                            Name = "WWF"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Philcosa.Application.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Philcosa.Application.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Philcosa.Application.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Philcosa.Application.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Philcosa.Application.Models.Chat.ChatHistory", b =>
                {
                    b.HasOne("Philcosa.Application.Models.Identity.ApplicationUser", "FromUser")
                        .WithMany("ChatHistoryFromUsers")
                        .HasForeignKey("FromUserId");

                    b.HasOne("Philcosa.Application.Models.Identity.ApplicationUser", "ToUser")
                        .WithMany("ChatHistoryToUsers")
                        .HasForeignKey("ToUserId");

                    b.Navigation("FromUser");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Catalog.Product", b =>
                {
                    b.HasOne("Philcosa.Domain.Entities.Catalog.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Cover", b =>
                {
                    b.HasOne("Philcosa.Domain.Entities.Country", "Country")
                        .WithMany("Covers")
                        .HasForeignKey("CountryId");

                    b.HasOne("Philcosa.Domain.Entities.CoverIssuer", "CoverIssuer")
                        .WithMany("Covers")
                        .HasForeignKey("CoverIssuerId");

                    b.HasOne("Philcosa.Domain.Entities.CoverType", "CoverType")
                        .WithMany("Covers")
                        .HasForeignKey("CoverTypeId");

                    b.HasOne("Philcosa.Domain.Entities.CoverValue", "Value")
                        .WithMany("Covers")
                        .HasForeignKey("ValueId");

                    b.Navigation("Country");

                    b.Navigation("CoverIssuer");

                    b.Navigation("CoverType");

                    b.Navigation("Value");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverTheme", b =>
                {
                    b.HasOne("Philcosa.Domain.Entities.Cover", "Cover")
                        .WithMany("CoverThemes")
                        .HasForeignKey("CoverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Philcosa.Domain.Entities.Theme", "Theme")
                        .WithMany("CoverTheme")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cover");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("Philcosa.Application.Models.Identity.ApplicationUser", b =>
                {
                    b.Navigation("ChatHistoryFromUsers");

                    b.Navigation("ChatHistoryToUsers");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Country", b =>
                {
                    b.Navigation("Covers");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Cover", b =>
                {
                    b.Navigation("CoverThemes");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverIssuer", b =>
                {
                    b.Navigation("Covers");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverType", b =>
                {
                    b.Navigation("Covers");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.CoverValue", b =>
                {
                    b.Navigation("Covers");
                });

            modelBuilder.Entity("Philcosa.Domain.Entities.Theme", b =>
                {
                    b.Navigation("CoverTheme");
                });
#pragma warning restore 612, 618
        }
    }
}
